# Development Dockerfile with hot reload support
ARG NODE_VERSION="24"
ARG GO_VERSION="1.25"

# Stage 1: Frontend Development
FROM node:${NODE_VERSION}-alpine AS frontend-dev
RUN corepack enable
WORKDIR /app

# Copy package configuration files and install dependencies
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY frontend/package.json ./frontend/package.json
RUN --mount=type=cache,target=/root/.pnpm-store pnpm install --frozen-lockfile

# Set development environment
ENV NODE_ENV=development
ENV PORT=3000

# Expose frontend development port
EXPOSE 3000

# Start frontend development server with hot reload
CMD ["pnpm", "-C", "frontend", "dev", "--host", "0.0.0.0"]

# Stage 2: Backend Development
FROM golang:${GO_VERSION}-alpine AS backend-dev

# Install development tools and dependencies
RUN apk add --no-cache \
    ca-certificates \
    curl \
    git \
    tzdata && \
    go install github.com/air-verse/air@latest

# Set development environment variables
ENV GIN_MODE=debug
ENV PORT=3552
ENV ENVIRONMENT=development
ENV GOCACHE=/go/cache
ENV GOMODCACHE=/go/pkg/mod

WORKDIR /app

# Copy Go module files and download dependencies
COPY backend/go.mod backend/go.sum ./
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/go/cache \
    go mod download

# Create directories for development with proper permissions
RUN mkdir -p /app/data /app/.bin /go/cache && \
    chmod 755 /app/data /app/.bin /go/cache

# Expose backend development port
EXPOSE 3552

# Use Air for hot reloading in development
CMD ["air", "-c", ".air.toml"]
